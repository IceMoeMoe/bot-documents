import{_ as a,c as e,o as t,a2 as i}from"./chunks/framework.DlC1fzyH.js";const _=JSON.parse('{"title":"GPTscript 说明文档","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"sealdice/GPTscripts.md","filePath":"sealdice/GPTscripts.md"}'),s={name:"sealdice/GPTscripts.md"},o=i('<h1 id="gptscript-说明文档" tabindex="-1">GPTscript 说明文档 <a class="header-anchor" href="#gptscript-说明文档" aria-label="Permalink to &quot;GPTscript 说明文档&quot;">​</a></h1><p>如何使用GPTscript，怎么更好地使用GPTscrpit</p><h2 id="这插件是干啥的" tabindex="-1">这插件是干啥的？ <a class="header-anchor" href="#这插件是干啥的" aria-label="Permalink to &quot;这插件是干啥的？&quot;">​</a></h2><p>很简单，用来让你的机器人连接上<a href="https://openrouter.ai/" target="_blank" rel="noreferrer">https://openrouter.ai/</a> 提供的GPT模型，然后通过指令调用机器人就可以对话了</p><h3 id="用法" tabindex="-1">用法 <a class="header-anchor" href="#用法" aria-label="Permalink to &quot;用法&quot;">​</a></h3><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.chat_bot</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">消</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">息</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><p>其中，消息可以为文本或图片，或者文本+图片</p><h3 id="示例" tabindex="-1">示例 <a class="header-anchor" href="#示例" aria-label="Permalink to &quot;示例&quot;">​</a></h3><p>.chat_bot 我饿了</p><h3 id="插件选项" tabindex="-1">插件选项 <a class="header-anchor" href="#插件选项" aria-label="Permalink to &quot;插件选项&quot;">​</a></h3><p>首先是黑白名单。黑白名单在sealdice的webui中设置，在插件选项里</p><p>而关于其他设置，你可以打开.js文件来编辑其中的内容</p><h4 id="参数" tabindex="-1">参数 <a class="header-anchor" href="#参数" aria-label="Permalink to &quot;参数&quot;">​</a></h4><p><code>chat_bot</code>：你可以一键替换所有该文本为你想要的指令。例如“聊天”或者“chat”</p><p><code>const OPENROUTER_API_KEY = &#39;your-api-key&#39;</code>：显然，你应该把<code>your-api-key</code>替换成你从网站获得的api key。这是所有操作的大前提</p><p><code>if (this.context.length &gt; 12) </code>：你可以在这里控制上下文的最大轮数。12是指最多保留5轮上下文，也就是保留用户的前5条信息</p><p><code>model: &quot;openai/gpt-4o-mini&quot;</code>：你可以修改冒号后面的内容来修改你使用的模型类型。这里推荐就用这个</p><p><code>max_tokens: 1000</code>：返回的最大token。如果你不想用户用一个“唐”字就烧掉你三四千token，那么最好把它设置成200,500，或者1000。这三个都是可接受的</p><p><code>seal.replyToSender(ctx, msg, cqc+res);</code>cqc是用于实现“回复”效果的CQ码。如果你不希望机器人在回复的时候携带“回复”功能，那么就删掉&quot;cqc+&quot;这几个字符</p><h3 id="结果" tabindex="-1">结果 <a class="header-anchor" href="#结果" aria-label="Permalink to &quot;结果&quot;">​</a></h3><h4 id="地城地图生成" tabindex="-1">地城地图生成 <a class="header-anchor" href="#地城地图生成" aria-label="Permalink to &quot;地城地图生成&quot;">​</a></h4><p>当执行该命令时，插件将生成一个地城的地图并将其转换为图像。图像将以指定的墙和路径颜色用canvas渲染后显示</p><h4 id="示例输出" tabindex="-1">示例输出 <a class="header-anchor" href="#示例输出" aria-label="Permalink to &quot;示例输出&quot;">​</a></h4><p>输入：.chat_bot 我饿了</p><p>返回：没问题！我会为你生成一些菜谱，你可以根据菜谱来进行烹饪：&lt;一大堆菜谱&gt;</p><h2 id="更多" tabindex="-1">更多 <a class="header-anchor" href="#更多" aria-label="Permalink to &quot;更多&quot;">​</a></h2><p>保存好你的APIKEY，不要弄丢，也不要发给别人，除非你真觉得TA是可信的。但总之，我不会为你弄丢APIKEY导致的问题提供任何帮助</p>',27),r=[o];function c(h,p,n,l,d,u){return t(),e("div",null,r)}const b=a(s,[["render",c]]);export{_ as __pageData,b as default};
