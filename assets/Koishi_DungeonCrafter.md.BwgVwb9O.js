import{_ as a,c as i,o as s,a2 as e}from"./chunks/framework.DlC1fzyH.js";const u=JSON.parse('{"title":"Dungeon Crafter 说明文档","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"Koishi/DungeonCrafter.md","filePath":"Koishi/DungeonCrafter.md"}'),t={name:"Koishi/DungeonCrafter.md"},n=e('<h1 id="dungeon-crafter-说明文档" tabindex="-1">Dungeon Crafter 说明文档 <a class="header-anchor" href="#dungeon-crafter-说明文档" aria-label="Permalink to &quot;Dungeon Crafter 说明文档&quot;">​</a></h1><p>总之就是<code>DungeonCrafter</code>的说明文档，解释了代码的运作和需要注意的事情</p><h2 id="为什么叫这个名字" tabindex="-1">为什么叫这个名字？ <a class="header-anchor" href="#为什么叫这个名字" aria-label="Permalink to &quot;为什么叫这个名字？&quot;">​</a></h2><p>因为有一个软件名字叫DungeonDraft，然后我想叫DungeonCraft，再想了想感觉有点律师函警告，所以选择了DungeronCrafter——正好也体现了这个插件草台班子的特性</p><h2 id="这插件是干啥的" tabindex="-1">这插件是干啥的？ <a class="header-anchor" href="#这插件是干啥的" aria-label="Permalink to &quot;这插件是干啥的？&quot;">​</a></h2><p><code>DungeonCrafter</code> 是基于简单的迷宫算法拓展而来的地城生成器。当然它也可以通过调整参数来生成一个原生态的迷宫。是的，就是那种很无聊的程序生成的小迷宫</p><h3 id="用法" tabindex="-1">用法 <a class="header-anchor" href="#用法" aria-label="Permalink to &quot;用法&quot;">​</a></h3><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">生成地城</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">arg</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">1&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">arg</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">2&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">arg</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">3&gt;</span></span></code></pre></div><ul><li><strong>arg1</strong>: 迷宫的宽度 (默认值: 25)。单位“格”。最好别让它超过500。永远别让它超过1000</li><li><strong>arg2</strong>: 迷宫的高度，其他的和宽度一样</li><li><strong>arg3</strong>: 生成“房间”的概率。默认为0.1，也就是每次生成格子的时候有10%可能变成房间</li></ul><h3 id="示例" tabindex="-1">示例 <a class="header-anchor" href="#示例" aria-label="Permalink to &quot;示例&quot;">​</a></h3><p>生成一个长宽均为30格，房间“非常多”（20%概率）的地城</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">生成地城</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 30</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 30</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.2</span></span></code></pre></div><h3 id="插件选项" tabindex="-1">插件选项 <a class="header-anchor" href="#插件选项" aria-label="Permalink to &quot;插件选项&quot;">​</a></h3><p>你可以在Koishi的插件配置中设置下面的内容</p><ul><li><strong>墙的颜色</strong>: 地城墙体颜色，默认为黑色</li><li><strong>过道颜色</strong>: 地城过道颜色，默认为白色</li></ul><h3 id="代码解释" tabindex="-1">代码解释 <a class="header-anchor" href="#代码解释" aria-label="Permalink to &quot;代码解释&quot;">​</a></h3><p>（下面的内容就是感觉文档内容太少所以写的，除非你对这个非常简单的实现感兴趣否则不用看）该插件使用以下函数生成地牢：</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">generateMaze(width:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> number,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> height:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> number,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> property:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> number,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Config</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">): string[][]</span></span></code></pre></div><p>生成一个二维数组，表示地城的地图，其中每个单元格可以是墙体（wall）或过道（path）</p><ul><li><p><strong>参数</strong>:</p><ul><li><code>width</code>: 地城宽度</li><li><code>height</code>: 地城高度</li><li><code>property</code>: 在给定位置创建房间的概率。（为什么是property？因为一开始是用这个来生成宝箱的）</li><li><code>config</code>: 墙体和过道的颜色配置</li></ul></li><li><p><strong>Returns</strong>: 一个二维数组，每个元素代表地城里的一个格子。 墙是<code>wallColor</code>, 过道是<code>pathColor</code>.</p></li></ul><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">writeToFile(map:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> string[][],</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Config</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>将生成的地城的map转换为图像buffer</p><ul><li><p><strong>参数</strong>:</p><ul><li><code>map</code>: 表示地城地图的二维矩阵</li><li><code>config</code>: 包含墙和路径颜色的配置对象</li></ul></li><li><p><strong>Returns</strong>: 一个图像buffer，保存生成的地城</p></li></ul><h3 id="结果" tabindex="-1">结果 <a class="header-anchor" href="#结果" aria-label="Permalink to &quot;结果&quot;">​</a></h3><h4 id="地城地图生成" tabindex="-1">地城地图生成 <a class="header-anchor" href="#地城地图生成" aria-label="Permalink to &quot;地城地图生成&quot;">​</a></h4><p>当执行该命令时，插件将生成一个地城的地图并将其转换为图像。图像将以指定的墙和路径颜色用canvas渲染后显示</p><h4 id="示例输出" tabindex="-1">示例输出 <a class="header-anchor" href="#示例输出" aria-label="Permalink to &quot;示例输出&quot;">​</a></h4><p>一个使用默认设置输出的地城：</p><p><img src="https://github.com/shakugannosaints/koishi-scripts/blob/main/DungeonCrafter/src/example.png?raw=true" alt="Example Dungeon"></p><h2 id="更多" tabindex="-1">更多 <a class="header-anchor" href="#更多" aria-label="Permalink to &quot;更多&quot;">​</a></h2><p>没了</p>',31),l=[n];function h(r,o,p,d,g,k){return s(),i("div",null,l)}const F=a(t,[["render",h]]);export{u as __pageData,F as default};
